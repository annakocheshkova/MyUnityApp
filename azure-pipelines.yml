#Your build pipeline references an undefined variable named ‘UNITY_SERIAL_NUMBER_WINDOWS’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘UNITY_USERNAME’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘UNITY_PASSWORD’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘ANDROID_NDK_URL’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘NUGET_PASSWORD’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘NUGET_FEED_ID’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
steps:
- powershell: ./scripts/build.ps1
  args: '-Target="Install-Unity-Windows" -Verbosity="Diagnostic"'

  displayName: 'Install Unity'

- powershell: ./scripts/build.ps1
  args: '-Target="RegisterUnity" -UnitySerialNumber="$(UNITY_SERIAL_NUMBER_WINDOWS)" -UnityUsername="$(UNITY_USERNAME)" -UnityPassword="$(UNITY_PASSWORD)" -Verbosity="Diagnostic"'

  displayName: 'Activate Unity'

- script: |
   echo After activating unity, some important .meta files are deleted, so they must be un-deleted
   git config --global user.email "you@example.com"
   git config --global user.name "Your Name"
   git stash
  displayName: 'git stash'

- powershell: ./scripts/build.ps1
  args: '-Target="DownloadNdk" -NdkUrl="$(ANDROID_NDK_URL)" -Verbosity="Diagnostic"'

  displayName: 'Download Android NDK'

- task: PowerShell@1
  displayName: 'Build Puppet Apps'
  inputs:
    scriptName: ./scripts/build.ps1

    args: '-Target="BuildPuppetApps" -NuGetPassword="$(NUGET_PASSWORD)" -NuGetFeedId="$(NUGET_FEED_ID)" -Verbosity="Diagnostic"'


- powershell: ./scripts/build.ps1
  args: '-Target="UnregisterUnity" -Verbosity="Diagnostic"'

  displayName: 'Unregister Unity'
  condition: always()

